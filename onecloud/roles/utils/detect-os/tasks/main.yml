---
# This role contains common plays that will run on all nodes
- block:
  - name: set var
    set_fact:
      k8s_controlplane_host: "{{ hostvars[inventory_hostname]['groups']['primary_master_node'][0] }}"
    run_once: true
    when:
    - k8s_controlplane_host | default('') | length == 0

  - name: Assert k8s_controlplane_host
    fail:
      msg: "k8s_controlplane_host is not defined. "
    when:
    - k8s_controlplane_host | default('') | length == 0

  - name: Set Onecloud Version If Not Defined
    environment:
      KUBECONFIG: /etc/kubernetes/admin.conf
    shell: |
      kubectl -n onecloud get onecloudclusters default -o=jsonpath='{.spec.version}'
    register: k8s_oc_ver
    delegate_to: "{{ k8s_controlplane_host }}"
    run_once: true

  - name: Set K8s Version
    set_fact:
      onecloud_version: "{{ k8s_oc_ver.stdout }}"
    when:
    - k8s_oc_ver.rc == 0
  when:
  - onecloud_version is not defined

- name: Assert Onecloud Version
  fail:
    msg: "onecloud_version is not defined. "
  when:
  - onecloud_version | default('') | length == 0

- name: set var
  set_fact:
    onecloud_version_abbr: "{{ onecloud_version | regex_replace('[^0-9.]+') | regex_findall('^[0-9]+\\.[0-9]+') | join('')}}"
  when:
  - onecloud_version is defined

- name: gather os specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "{{ ansible_distribution | regex_replace('[^a-zA-Z0-9 ]+|[ ]+$', '') |replace(' ','_') | lower}}-{{ansible_distribution_release}}.yml"
        - "{{ ansible_distribution | regex_replace('[^a-zA-Z0-9 ]+|[ ]+$', '') |replace(' ','_') | lower}}.yml"
        - "{{ ansible_distribution|lower | replace(' ', '_') }}-{{ ansible_distribution_major_version|lower|replace('/', '_') }}.{{ ansible_architecture }}.yml"
        - "{{ ansible_distribution|lower | replace(' ', '_') }}-{{ ansible_distribution_major_version|lower|replace('/', '_') }}.yml"
        - "{{ ansible_distribution|lower | replace(' ', '_') }}-{{ ansible_distribution_release|lower }}-{{ ansible_architecture }}.yml"
        - "{{ ansible_distribution|lower | replace(' ', '_') }}-{{ ansible_distribution_release|lower }}.yml"
        - "{{ ansible_distribution|lower | replace(' ', '_') }}-{{ ansible_distribution_major_version|lower|replace('/', '_') }}.yml"
        - "{{ ansible_distribution|lower | replace(' ', '_') }}-{{ ansible_architecture }}.yml"
        - "{{ ansible_distribution|lower | replace(' ', '_') }}.yml"
        - "{{ ansible_os_family|lower }}-{{ ansible_architecture }}.yml"
        - "{{ ansible_os_family|lower }}.yml"
        - defaults.yml
      paths:
        - ../vars
  tags:
    - facts

- name: gather var for latest packages
  include_vars: "../vars/latest_packages.yml"
  when:
  - latest_packages is not defined

- name: Append K8s packages if needed
  set_fact:
    common_packages: "{{ common_packages + k8s_packages }}"
  when:
  - k8s_or_k3s | default('k8s') == 'k8s'

- name: Lookup offline data path
  ansible.builtin.set_fact:
    offline_data_path: "{{ lookup('env', 'OFFLINE_DATA_PATH') }}"

- name: Set offline data path var
  ansible.builtin.set_fact:
    offline_data_path: "{{ offline_data_path | default(offline_data_path_var) }}"

- name: Set online status
  ansible.builtin.set_fact:
    online_status: "{% if offline_data_path and offline_data_path != '' %}offline{% else %}online{% endif %}"

- name: Set offline deploy
  ansible.builtin.set_fact:
    offline_deploy: "{% if offline_data_path and offline_data_path != '' %}true{% else %}false{% endif %}"

- name: Check if /usr/bin/python3 exists
  stat:
    path: /usr/bin/python3
  register: python3_stat

- name: Set python interpreter
  set_fact:
    ansible_python_interpreter: "/usr/bin/python3"
  when: python3_stat.stat.exists

- debug: var=online_status

- name: set default fact is_running_on_vm
  set_fact:
    is_running_on_vm: false

- name: detect if running on VM
  set_fact:
    is_running_on_vm: true
  when:
  - ansible_virtualization_type is defined
  - ansible_virtualization_type != ''
  - ansible_virtualization_type != 'NA'
  - ansible_virtualization_role | default("") != "host"

- name: join as host condition
  set_fact:
    join_as_host: false

- name: vm node join as host agent
  set_fact:
    join_as_host: true
  when:
  - k8s_node_as_oc_host|default(false)|bool == true
  - k8s_node_as_oc_host_on_vm | default(false)|bool == true
  - is_running_on_vm | default(false)|bool == true

- name: physical node join as host agent
  set_fact:
    join_as_host: true
  when:
  - k8s_node_as_oc_host|default(false)|bool == true
  - is_running_on_vm | default(false)|bool == false

- name: disable telegraf for host service
  include_role:
    name: utils/disable-telegraf-service
  when:
  - join_as_host | default(false)|bool == true

